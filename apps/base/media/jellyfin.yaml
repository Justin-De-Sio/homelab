apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config-new
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn-performance
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      initContainers:
        - name: sysctl
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              sysctl -w fs.inotify.max_user_instances=8192
              sysctl -w fs.inotify.max_user_watches=524288
          securityContext:
            privileged: true
      containers:
        - name: jellyfin
          image: jellyfin/jellyfin:2025090805
          ports:
            - containerPort: 8096
          volumeMounts:
            - name: config
              mountPath: /config
            - name: videos
              mountPath: /data
            - name: dev-dri
              mountPath: /dev/dri
          securityContext:
            privileged: false
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-config-new
        - name: videos
          persistentVolumeClaim:
            claimName: media-videos
        - name: dev-dri
          hostPath:
            path: /dev/dri
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: media
spec:
  selector:
    app: jellyfin
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8096
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: media
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - video.justindesio.com
    secretName: jellyfin-tls
  rules:
    - host: video.justindesio.com
      http:
        paths:
          - backend:
              service:
                name: jellyfin
                port:
                  number: 80
            path: /
            pathType: Prefix 