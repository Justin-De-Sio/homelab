apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
        - name: sonarr
          image: linuxserver/sonarr:4.0.14
          ports:
            - containerPort: 8989
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Paris"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: downloads
              mountPath: /downloads
            - name: videos
              mountPath: /tv
              subPath: tv
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: downloads
          persistentVolumeClaim:
            claimName: media-downloads
        - name: videos
          persistentVolumeClaim:
            claimName: media-videos
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: media
spec:
  type: ClusterIP
  selector:
    app: sonarr
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8989
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
  namespace: media
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - sonarr.justindesio.com
    secretName: sonarr-tls
  rules:
    - host: sonarr.justindesio.com
      http:
        paths:
          - backend:
              service:
                name: sonarr
                port:
                  number: 80
            path: /
            pathType: Prefix 